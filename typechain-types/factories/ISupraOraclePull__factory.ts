/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISupraOraclePull,
  ISupraOraclePullInterface,
} from "../ISupraOraclePull";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bytesproof",
        type: "bytes",
      },
    ],
    name: "verifyOracleProof",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "pairs",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "prices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "decimals",
            type: "uint256[]",
          },
        ],
        internalType: "struct ISupraOraclePull.PriceData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISupraOraclePull__factory {
  static readonly abi = _abi;
  static createInterface(): ISupraOraclePullInterface {
    return new Interface(_abi) as ISupraOraclePullInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISupraOraclePull {
    return new Contract(address, _abi, runner) as unknown as ISupraOraclePull;
  }
}
